version: "3.7"

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  mongo-data:
    driver: local

services:

  eureka-server:
    build: ./eureka-server/.
    ports:
      - 8761:8761

  fta:
    build: ./fta/.
    ports:
      - 80:80
    depends_on:
      - mongo_db
      - eureka-server
    entrypoint: ["java","-Dspring.profiles.active=dev","-DEUREKA_URI=http://eureka-server:8761","-DBROKER_URI=http://broker:29092","-Dspring.data.mongodb.host=mongo_db","-XX:+UseZGC","-jar","/app.jar"]

  email-service:
    build: ./email-service/.
    depends_on:
      - eureka-server
    entrypoint: ["java","-Dspring.profiles.active=dev","-DEUREKA_URI=http://eureka-server:8761","-DBROKER_URI=http://broker:29092","-XX:+UseZGC","-jar","/app.jar"]

  fraud-service:
    build: ./fraud-service/.
    depends_on:
      - eureka-server
    entrypoint: ["java","-DEUREKA_URI=http://eureka-server:8761","-jar","/app.jar"]

  transactions-generator-service:
    build: ./transactions-generator-service/.
    depends_on:
      - eureka-server
    entrypoint: ["java","-DEUREKA_URI=http://eureka-server:8761","-jar","/app.jar"]

  mongo_db:
    image: mongo:4.4.3
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
